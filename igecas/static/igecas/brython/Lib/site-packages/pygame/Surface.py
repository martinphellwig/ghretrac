from browser import document, html, window
from javascript import console

import pygame.Rect

class Surface:
  def __init__(self, dim, depth=16):
      self._width=dim[0]
      self._height=dim[1]
      self._depth=depth
      self._canvas=html.CANVAS(width=self._width, height=self._height)
      self._context=self._canvas.getContext('2d')

      document['py_div'] <= self._canvas

  def blit(self, source, dest, area=None, special_flags=0):
      if area is None:
         self._context.drawImage(source, dest[0], dest[1])
         return source.width, source.height
      
      _ctx=source.getContext('2d')
      _subset=_ctx.getImageData(area[0][0],area[0][1], area[1],[0], area[1][1])
      # we want just a subset of the source image copied
      self._context.drawImage(_subset, dest[0], dest[1])
      return _subset.width, _subset.height

  def convert(self, surface):
      ## fix me...
      return surface

  def copy(self):
      _imgdata=self._context.toDataURL('image/png')
 
      _canvas=html.CANVAS(width=self._canvas.width,height=self._canvas.height)
      _ctx=_canvas.getContext('2d')
      _ctx.drawImage(_imgdata, 0, 0)

      return _canvas
             
  def fill(self, color):
      """ fill canvas with this color """
      self._context.rect(0,0,self._width,self._height)
      self._context.fillStyle="rgb(%s,%s,%s)" % color
      self._context.fill()

  def get_height(self):
      return int(self._canvas.height)

  def get_width(self):
      return int(self._canvas.width)

  def scroll(self, dx=0, dy=0):
      _imgdata=self._context.toDataURL('image/png')
      self._context.drawImage(_imgdata, dx, dy)

  def get_at(self, pos):
      #returns rgb
      return self._context.getImageData(pos[0], pos[1],1,1).data

  def set_at(self, pos, color):
      self._context.fillStyle='rgb(%s,%s,%s)' % color
      self._fillRect(pos[0], pos[1], 1, 1)

  def get_size(self):
      return self._canvas.width, self._canvas.height

  def get_width(self):
      return self._canvas.width

  def get_height(self):
      return self._canvas.height

  def get_rect(self):
      return pygame.Rect(0, 0, self._canvas.width, self._canvas.height)
